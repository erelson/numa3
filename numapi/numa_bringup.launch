<launch>
  <!-- Start ROS communication between the robot's computer and Linorobot base -->
<!--
    <node pkg="rosserial_python" name="rosserial_lino" type="serial_node.py" output="screen">
        <param name="port" value="/dev/linobase" />
        <param name="baud" value="57600" />
    </node>
-->

    <!-- IMU Relay and Filter -->
<!--
    <include file="$(find linorobot)/launch/include/imu/imu.launch" />
-->

    <!-- Publish Linorobot odometry -->
<!--
    <node pkg="linorobot" name="lino_base_node" type="lino_base_node"></node>
-->

    <node name="cmd_vel_relay" pkg="numapi_to_pyboard" type="cmd_vel_relay" />

    <param name="robot_description" textfile="$(find linorobot)/urdf/linorobot.urdf" />
    <!-- Run the robot_state_publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <!-- If you have any specific parameters, they can be added here -->
    </node>

    <!-- Publish static transform from base_footprint to base_link -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0.098 0 0 0  /base_footprint /base_link"/> -->
    <!-- Publish static transform of the laser. Define your sensor offset here -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0.065 0 0.098
0 0 0  /base_link /laser"/> -->

    <!-- Odom-IMU Extended Kalman Filter-->
<!--
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
        <remap from="odometry/filtered" to="odom" />
        <rosparam command="load" file="$(find linorobot)/param/ekf/robot_localization.yaml" />
    </node>
-->

    <!-- Run Linorobot compatible laser drivers -->
    <include file="$(find linorobot)/launch/include/laser.launch" />
</launch>
